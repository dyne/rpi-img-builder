#!/bin/bash
#ARMHF ROOTFS
RED="\e[0;31m"
BRED="\e[1;31m"
GRN="\e[0;32m"
YLW="\e[1;33m"
GRY="\e[0;37m"
WHT="\e[1;37m"
FIN="\e[0m"
source userdata.txt > /dev/null 2>&1;
source lib/source
source lib/function/boot
UD=userdata.txt

userdata(){
echo ""
echo "Please create a userdata.txt file"
while [ true ] ; do
read -t 10 -n 1
if [ $? = 0 ] ; then
exit ;
else
echo "run make config"
fi
done
}

if [ -f "$UD" ]; then
    :;
else 
    userdata
fi

validation

devuan_rootfs (){
DEVUAN_RELEASE=devuan-${DISTRO_VERSION}-rootfs-armhf.tar.xz
if ls $DEVUAN_RELEASE > /dev/null 2>&1; then exit; 
	else : ;
fi
wget -cq --show-progress https://github.com/pyavitz/rootfs-tarballs/releases/download/rootfs/devuan-${DISTRO_VERSION}-rootfs-armhf.tar.xz
}

ubuntu_rootfs (){
UBUNTU_RELEASE=ubuntu-base-${DISTRO_VERSION}-base-armhf.tar.gz
if ls $UBUNTU_RELEASE > /dev/null 2>&1; then exit; 
	else : ;
fi
wget -cq --show-progress http://cdimage.ubuntu.com/ubuntu-base/releases/${DISTRO_VERSION}/release/ubuntu-base-${DISTRO_VERSION}-base-armhf.tar.gz
}

if `grep -Fx "devuan=1" "userdata.txt" > /dev/null 2>&1;`
	then devuan_rootfs && exit;
fi
if `grep -Fx "ubuntu=1" "userdata.txt" > /dev/null 2>&1;`
	then ubuntu_rootfs && exit;
fi
if `grep -Fx "verbose=1" "userdata.txt" > /dev/null 2>&1;`
	then set -eux -o pipefail;
	else set -eu -o pipefail;
fi
echo
KEY="/usr/share/keyrings/debian-archive-keyring.gpg"
ROOT="sysroot"
ROOTFS_ARCH="rootfs-armhf"
RELEASE=debian-${DISTRO_VERSION}-${ROOTFS_ARCH}.tar.xz
if ls $RELEASE > /dev/null 2>&1;
	then ls $RELEASE && exit;
fi
echo -e "${GRN}Starting debootstrap${FIN} ..."
echo -e -n ${RED}

# start debootstrap
mkdir -p ${ROOT}/usr/bin
cp $(which "qemu-arm-static") ${ROOT}/usr/bin
debootstrap --arch armhf --foreign --force-check-gpg --keyring=$KEY ${DISTRO_VERSION} ${ROOT} http://deb.debian.org/debian
chroot ${ROOT} /debootstrap/debootstrap --second-stage
rm -f ${ROOT}/usr/bin/qemu-arm-static
rm -f ${ROOT}/var/cache/debconf/*

# finish
echo
echo -e "${BRED}Archiving root filesystem${FIN} ..."
cd ${ROOT}
echo -e -n ${WHT}
XZ_DEFAULTS="--threads=${CORES}"; export XZ_DEFAULTS;tar cfJ - * | (pv -terb > ../$RELEASE)
echo -e -n ${FIN}
cd ..

rm -fdr ${ROOT}
clear
