qemu_arm(){
mkdir -p p2/usr/bin
cp $(which "qemu-arm-static") p2/usr/bin
}

qemu_arm_remove(){
rm p2/usr/bin/qemu-arm-static
}

bcm2711_eeprom(){
echo
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
echo Checking for updates.
apt update
echo
echo Installing rpi-eeprom.
sleep 1s
apt install help2man rsync pciutils -y
###
mkdir -p ~/eeprom
mv -f rpi-eeprom-update.patch /root/eeprom/
mv -f rpi-eeprom-control.patch /root/eeprom/
cd ~/eeprom
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/rpi-eeprom_${EEPROM_VERSION}.orig.tar.gz
tar xf rpi-eeprom_${EEPROM_VERSION}.orig.tar.gz
tar xf rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
rm -f rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
mkdir -p debian/patches
mv rpi-eeprom-update.patch debian/patches/rpi-eeprom-update.patch 
echo rpi-eeprom-update.patch >> debian/patches/series
mv -f debian rpi-eeprom-${EEPROM_VERSION}/
mv rpi-eeprom-control.patch rpi-eeprom-${EEPROM_VERSION}/
cd rpi-eeprom-${EEPROM_VERSION}
patch -p1 < rpi-eeprom-control.patch
rm -f rpi-eeprom-control.patch
dpkg-buildpackage -us -nc -uc
cd ..
dpkg -i *.deb
cd ..
rm -fdr eeprom
echo Done.
}

rpi_userland(){
echo
echo Adding raspi userland.
rm -f /etc/profile
mv -f profile /etc/profile
mv rpi-vc.conf /etc/ld.so.conf.d/rpi-vc.conf
chown root:root /etc/profile
chown root:root /etc/ld.so.conf.d/rpi-vc.conf
sleep 1s
mkdir -p /opt
git clone https://github.com/raspberrypi/userland.git
mv -f userland-remove-hi-pi.patch /root/userland/
cd userland
patch -p1 < userland-remove-hi-pi.patch
rm -f userland-remove-hi-pi.patch
./buildme
cd ~
rm -f -d -R userland
ldconfig
echo Done.
}

bcm_modules(){
echo
echo Updating etc modules.
rm -f /etc/modules
tee /etc/modules <<EOF
# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with "#" are ignored.
#bcm2835-v4l2
#i2c-dev

EOF
chown root:root /etc/modules
echo Done.
}

bcm2710_modules(){
echo
echo Updating etc modules.
rm -f /etc/modules
tee /etc/modules <<EOF
# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with "#" are ignored.
#bcm2835-v4l2
#i2c-dev
snd_bcm2835

EOF
chown root:root /etc/modules
echo Done.
}

### 2020
# https://community.cypress.com/gfawx74859/attachments/gfawx74859/resourcelibrary/966/1/cypress-fmac-v4.14.77-2020_0115.zip
cypress_firmware(){
echo
echo Adding brcm firmware from cypress.
sleep 1s
mkdir cypress
cd cypress
wget -cq --show-progress https://github.com/pyavitz/binary/releases/download/060420/cypress-fmac-v4.14.77-2020_0115.zip
unzip -qq cypress-fmac-v4.14.77-2020_0115.zip
tar -xf cypress-firmware-v4.14.77-2020_0115.tar.gz
#rm -f firmware/*pcie*
cp -f firmware/* /lib/firmware/brcm/
cd ~
rm -fdr cypress
echo Done.
}

zramswap_config(){
sed -i 's/#ALLOCATION=256/ALLOCATION=1024/g' /etc/default/zramswap
sed -i 's/#SIZE=256/SIZE=1024/g' /etc/default/zramswap
sed -i 's/#PRIORITY=100/PRIORITY=100/g' /etc/default/zramswap
}

fetch_version(){
echo 'INSTALLED_KERNEL="' > /root/kernel1
cat /usr/src/linux-headers*/include/config/kernel.release > /root/kernel2
echo '"' > /root/kernel3
paste -d '\0' kernel1 kernel2 kernel3  > /root/kernel.txt
rm -f kernel1 kernel2 kernel3
}

uscripts_stage1(){
mkdir -p p2/root/userscripts
cp -f files/userscripts/* p2/root/userscripts/
rm -f p2/root/userscripts/README.md
}

uscripts_stage2(){
echo
echo -e "\e[1;33mAdding user scripts\e[0m."
mkdir -p /usr/local/bin
cp -f userscripts/* /usr/local/bin/
rm -fdr userscripts 
chmod +x /usr/local/bin/*
sleep 1s
echo -e "\e[1;33mDone\e[0m."
echo
}

bluez_firmware(){
BRPT="rpt7"
echo Building bluez firmware package.
sleep 1s
mkdir -p bluez-firmware
cd bluez-firmware
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/b/bluez-firmware/bluez-firmware_1.2.orig.tar.gz
tar xf bluez-firmware_1.2.orig.tar.gz
cd bluez-firmware-1.2
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/b/bluez-firmware/bluez-firmware_1.2-4+${BRPT}.debian.tar.xz
tar xf bluez-firmware_1.2-4+${BRPT}.debian.tar.xz
rm -f bluez-firmware_1.2-4+${BRPT}.debian.tar.xz
dpkg-buildpackage -us -uc
cd ..
dpkg -i bluez-firmware_*.deb
cd ~
rm -fdR bluez-firmware
}

brcm_firmware(){
WRPT="rpt10"
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/f/firmware-nonfree/firmware-brcm80211_20190114-1+${WRPT}_all.deb
dpkg -i firmware-brcm80211_20190114-1+${WRPT}_all.deb
rm -f firmware-brcm80211_20190114-1+${WRPT}_all.deb
}
