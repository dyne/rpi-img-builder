source_dir (){
mkdir -p ${SRC}
cp -f soc.txt ${SRC}/
cd ${SRC}
}

clean_source (){
if ls ${KERNEL}-${VERSION} > /dev/null 2>&1;
	then echo "" && echo -e "${PNK}Cleaning${FIN} ..." && rm -fdr ${KERNEL}-${VERSION};
fi
}

download (){
echo
echo_kernel
if ls ${KERNEL}-${VERSION}.tar.gz > /dev/null 2>&1;
	then echo -e "${YLW}${KERNEL}-${VERSION}.tar.gz found${FIN}.";
	else aria2c -c --download-result=hide --console-log-level=error --disable-ipv6=true --summary-interval=0 --show-files=false https://github.com/raspberrypi/linux/archive/rpi-${VERSION}.tar.gz && echo_bdone;
fi
}

extract (){
echo
echo_extract
echo -e -n "${WHT}"
pv ${KERNEL}-${VERSION}.tar.gz | tar -xzf - -C .
echo -e -n "${FIN}"
}

# armv6l
armv6_setup (){
cd ${KERNEL}-${VERSION}
export ARCH=arm
KERNEL=kernel
#make clean
#make mrproper
}

armv6_cconfig (){
    echo_cconfig
    cp -f ../${DEF}/${MYCONFIG} arch/arm/configs/
    make KBUILD_DEBARCH=armel ARCH=arm ${MYCONFIG}
    echo_done
}

armv6_menuconfig (){
    echo
    echo_menuconfig
    sleep 1s
    make KBUILD_DEBARCH=armel ARCH=arm menuconfig
}

armv6_ccompile (){
    echo -e "-- ${GRN}CC${FIN}"
    echo_build
    echo 'y' | make -j${CORES} KBUILD_DEBARCH=armel ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- bindeb-pkg
}

armv6_ncompile (){
    echo -e "-- ${GRN}NC${FIN}"
    echo_build
    echo 'y' | make -j${CORES} KBUILD_DEBARCH=armel ARCH=arm bindeb-pkg
}

# armhf
armv7_setup (){
cd ${KERNEL}-${VERSION}
export ARCH=arm
if `grep -Fx "bcm2711" "../soc.txt" >/dev/null;`
	then KERNEL=kernel7l;
fi
if `grep -Fx "bcm2710" "../soc.txt" >/dev/null;`
	then KERNEL=kernel7;
fi
}

userpatches (){
if
ls ../${UP}/*.patch > /dev/null 2>&1;
then echo -e "${GRN}Applying user patches${FIN}." &&
for i in ../${UP}/*.patch; do patch -p1 < $i; done ;
else echo -e "${YLW}No user patches found${FIN}." 
fi
}

armv7_cconfig (){
    echo_cconfig
    cp -f ../${DEF}/${MYCONFIG} arch/arm/configs/
    make ARCH=arm ${MYCONFIG}
    echo_done
}

armv7_menuconfig (){
    echo
    echo_menuconfig
    sleep 1s
    make menuconfig
}

armv7_ccompile (){
    echo -e "-- ${GRN}CC${FIN}"
    echo_build
    echo 'y' | make -j${CORES} ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bindeb-pkg
}

armv7_ncompile (){
    echo -e "-- ${GRN}NC${FIN}"
    echo_build
    echo 'y' | make -j${CORES} ARCH=arm bindeb-pkg
}

ccpatch (){
    echo
    echo_ccpatch
    userpatches
    rm -f scripts/package/builddeb
    rm -f scripts/package/mkdebian
    cp -R ../${PAT}/builddeb scripts/package/
    cp -R ../${PAT}/mkdebian scripts/package/
    chmod +x scripts/package/builddeb
    chmod +x scripts/package/mkdebian
    if `grep -Fx "bcm2711" "../../soc.txt" >/dev/null;`
	then patch -p1 < ../${CC}/rpi4b-packaging.patch;
    fi
    if `grep -Fx "bcm2710" "../../soc.txt" >/dev/null;`
	then patch -p1 < ../${CC}/rpi3b-packaging.patch;
    fi
    if `grep -Fx "bcm2708" "../../soc.txt" >/dev/null;`
	then patch -p1 < ../${CC}/rpi-packaging.patch;
    fi
    cp -f ../${PAT}/headers-byteshift.patch headers-byteshift.patch
    sed -i 's/export INITRD=$want_initrd/export INITRD=No/g' scripts/package/builddeb
    sed -i 's/export INITRD=$(if_enabled_echo CONFIG_BLK_DEV_INITRD Yes No)/export INITRD=No/g' scripts/package/builddeb
    echo_done
    echo
}

ncpatch (){
    echo
    echo_ncpatch
    userpatches
    rm -f scripts/package/builddeb
    rm -f scripts/package/mkdebian
    cp -R ../${PAT}/builddeb scripts/package/
    cp -R ../${PAT}/mkdebian scripts/package/
    chmod +x scripts/package/builddeb
    chmod +x scripts/package/mkdebian
    if `grep -Fx "bcm2711" "../../soc.txt" >/dev/null;`
	then patch -p1 < ../${NC}/rpi4b-packaging.patch;
    fi
    if `grep -Fx "bcm2710" "../../soc.txt" >/dev/null;`
	then patch -p1 < ../${NC}/rpi3b-packaging.patch;
    fi
    if `grep -Fx "bcm2708" "../../soc.txt" >/dev/null;`
	then patch -p1 < ../${NC}/rpi-packaging.patch;
    fi
    sed -i 's/export INITRD=$want_initrd/export INITRD=No/g' scripts/package/builddeb
    sed -i 's/export INITRD=$(if_enabled_echo CONFIG_BLK_DEV_INITRD Yes No)/export INITRD=No/g' scripts/package/builddeb
    echo_done
    echo
}

rpi4_fconfig (){
    echo -e "${RED}Making bcm2711 defconfig${FIN}."
    module_sig
    make ARCH=arm bcm2711_defconfig &> /dev/null
    echo_done
}

rpi3_fconfig (){
    echo -e "${RED}Making bcmrpi3 defconfig${FIN}."
    module_sig
    make ARCH=arm bcm2709_defconfig &> /dev/null
    echo_done
}

rpi_fconfig (){
    echo -e "${RED}Making bcmrpi defconfig${FIN}."
    module_sig
    make KBUILD_DEBARCH=armel ARCH=arm bcmrpi_defconfig &> /dev/null
    echo_done
}

choose_rpi4_defconfig (){
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    armv7_cconfig
    ;;
  1)
    rpi4_fconfig
    ;;
esac
}

choose_rpi3_defconfig (){
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    armv7_cconfig
    ;;
  1)
    rpi3_fconfig
    ;;
esac
}

choose_rpi_defconfig (){
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    armv6_cconfig
    ;;
  1)
    rpi_fconfig
    ;;
esac
}

choose_v7_menuconfig (){
if `grep -Fx "menuconfig=1" "../../userdata.txt" >/dev/null;`
    then armv7_menuconfig
fi
}

choose_v6_menuconfig (){
if `grep -Fx "menuconfig=1" "../../userdata.txt" >/dev/null;`
    then armv6_menuconfig
fi
}

choose_v7_compile (){
case `grep -Fx "crosscompile=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    armv7_ccompile
    ;;
  1)
    armv7_ncompile
    ;;
esac
}

choose_v6_compile (){
case `grep -Fx "crosscompile=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    armv6_ccompile
    ;;
  1)
    armv6_ncompile
    ;;
esac
}
